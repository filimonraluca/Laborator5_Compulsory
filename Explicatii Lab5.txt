1. 
Am creat clasa Document cu atributele id, name si locatie.
Am creat clasa Catalog cu atributele name, path si o lista de documente.
Am creat clasa CatalogUtil cu scopul de a realiza operatii asupra clasei Catalog.
2.
metoda save:
	Pentru a salva catalogul intr-un fisier extern folosind object serialization am creat un stream decorator ObjectOutputStream
care comunica cu un FileOutputStream. Obiectul catalog este scris in fisierul catalog.getpath() folosind metoda
metoda writeObject. Exceptia IOException care poate aparea datorita unor probleme cu fisierul este aruncata
mai departe, urmand sa fie rezolvata in main.

metoda load:
	Pentru a incarca catalogul se foloseste streamul decorator ObjectInputStream care comunica cu FileInputStream.
Catalogul este citit din fisier prin intermediul metodei readObject().
Pentru acest punct am creat o noua exceptie InvalidCatalogException. Metoda load arunca aceasta exceptie si este 
prinsa in main. In metoda load mai pot aparea inca doua excepetii (IOException,ClassNotFoundException) datoria lucrului cu fisiere, dar acestea
sunt rezolvate in interiorul metodei.
	
meloda view
	Pentru metoda view am verificat tipul locatiei. Daca locatia incepe cu "http" am folosit clasa
URI si metoda browse din clasa Desktop, altfel am folosit clasa file si metoda open din clasa Desktop.
In aceasta metoda pot aparea doua exceptii URISyntaxException si IOException pe care le-am rezolvat in interiorul metodei.

Optional

1. Pentru a salva catalogul intr-o reprezentare plain text am hotarat sa il salvez in format xml folosind
clasa XMLEncoder. In metoda save pot aparea doua tipuri de exceptii datoarate lucrului cu fisiere IOException si 
FileNotFoundException pe care le-am tratat in interiorul metodei.
   Pentru metoda load am folosit clasa XMLDecoder. Specificam ca obiectul citit din fisier este de tipul Catalog 
si il returnam. In aceasta metoda poate aparea exceptioa IOException datorita operatiilor de tip input. Exceptia 
este prinsa in interiorul metodei, dar va arunca mai departe exceptia custom InvalidCatalogException.

2. Implementarea acestui punct se afla in metoda shellTest din clasa Main.
Pentru comenzile citite de la tastatura se indentifica in primul rand tipul comenzii (load, view, list)

Pentru comanda load se verifica ca numarul de argumente sa fie unul singur si anume path-ul fisierului. 
Daca exista mai multe argumente se arunca exceptia custom IllegalNrOfArgsException, altfel se face load
la fisierul primit ca parametru.

Comanda view trebuie sa fie insotita de doua Stringuri simbolizand path-ul unde este salvat catalogul si id-ul documentului
pe care dorim sa il vizualizam. Se va apela metoda load din clasa CatalogUtil urmata de metoda view.
Daca numarul de argumente nu corespunde cu cel dorit se arunca exceptia custom IllegalNrOfArgsException.

Comanda list are un sigur argument, path-ul fisierului in care este salvat catalogul. Se va apela metoda load din CatalogUtil, urmata de getDocuments din clasa Catalog. 
Daca numarul de argumente nu corespunde cu cel dorit se arunca xceptia custom IllegalNrOfArgsException.

3. Am creat clasa abstracta Commands cu un singur atribut, un array de stringuri, reprezentand argumentele unei comenzi generale
si 3 metode setArgs, getArgs si metoda abstracta execute. Metoda execute reprezinta executia efectiva a comenzii.
Comezile CommandLoad, CommandList si CommandView extind clasa Commands si implementeaza metoda execute folosindu-se 
de clasa CatalogUtil.

4.Am creat clasa CommandReport care extinde clasa Commands. In metoda execute din CommandReport se apeleaza metoda load
din catalog util, iar pe catalogul returnat se apeleaza metoda reportHtml din clasa Catalog.
Metoda reportHtml presupune crearea unui fisier .html in care prin intermediul streamului decorator BufferedWriter
se vor scrie date sub forma unor paragrafe html.

5. Am creat urmatoarele custom exceptions:

IllegalNrOfArgsException pentru situatia in care comenzile primesc un numar gresit de argumente. 

NotUniqueIdException pentru situatiile in care intr-un catalog exista doua documente cu acelasi id. Verificarea
se face la metoda add din clasa Catalog.

UnknownCommandException pentru situatiile in care comanda data de la tastatura nu este load, view sau list.

6. Am exportat proiectul intr-un format .jar ce poate fi gasit la buid/libs/Laborator5-1.0-SNAPSHOT.jar
si executat cu comanda java -jar Laborator5-1.0-SNAPSHOT.jar


